# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: DI - NB master

pr:
  branches:
    exclude:
      - master
      - features/*
      - fixes/*
      - releases/*

trigger: none

schedules:
  - cron: "6 0 * * *"
    displayName: DI - daily NB master
    always: false
    branches:
      include:
        - master
    batch: true

pool:
  vmImage: windows-latest

steps:

- task: UseDotNet@2
  displayName: Install .NET 5.0
  timeoutInMinutes: 5
  inputs:
    packageType: 'sdk'
    version: '5.0.x'

- task: NuGetCommand@2
  displayName: Restore source projects
  timeoutInMinutes: 10
  inputs:
    command: 'restore'
    restoreSolution: 'src/DI.sln'
    feedsToUse: 'select'
    configuration: NightlyBuild

- task: VSBuild@1
  displayName: Build source projects
  timeoutInMinutes: 30
  inputs:
    solution: 'src/DI.sln'
    platform: 'x64'
    configuration: NightlyBuild
    clean: true

- task: VSTest@2
  displayName: Test source projects
  timeoutInMinutes: 15
  inputs:
    testSelector: 'testAssemblies'
    testAssemblyVer2: |
      **\*test*.dll
      !**\*TestAdapter.dll
      !**\obj\**
    searchFolder: '$(System.DefaultWorkingDirectory)'
    runInParallel: true
    codeCoverageEnabled: true
    configuration: NightlyBuild
    failOnMinTestsNotRun: true

- task: PublishTestResults@2
  displayName: Check is no failed tests
  inputs:
    testResultsFormat: 'XUnit'
    testResultsFiles: '**/*.trx'
    failTaskOnFailedTests: true

- task: DotNetCoreCLI@2
  displayName: Pack Core.csproj
  timeoutInMinutes: 15
  inputs:
    command: 'pack'
    arguments: '-p:IncludeSymbols=true -p:SymbolPackageFormat=snupkg'
    packagesToPack: 'src/Core/Core.csproj'
    configuration: NightlyBuild
    versioningScheme: 'byPrereleaseNumber'
    majorVersion: '0'
    minorVersion: '9'
    patchVersion: '0'

- task: NuGetCommand@2
  displayName: Publish packages
  timeoutInMinutes: 5
  continueOnError: true
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;$(Build.ArtifactStagingDirectory)/**/*.snupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'Nuget.org mateuszokroj1'